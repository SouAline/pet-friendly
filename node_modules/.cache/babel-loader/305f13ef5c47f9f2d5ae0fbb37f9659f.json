{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\infnet\\\\Front-end\\\\projeto-de-bloco\\\\miaut\\\\pet-friendly\\\\src\\\\components\\\\SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { Card, Form, Button, Alert } from \"react-bootstrap\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport logo from \"../img/logoMiaut.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SignUp() {\n  _s();\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const {\n    signUp\n  } = useAuth();\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError('Passwords do not match');\n    }\n\n    try {\n      setError('');\n      setLoading(true);\n      await signUp(emailRef.current.value, passwordRef.current.value);\n      history.push(\"/login\");\n    } catch {\n      setError('Failed to create an account');\n    }\n\n    setLoading(false);\n  }\n\n  return (\n    /*#__PURE__*/\n    // <>\n    //     <Card>\n    //         <Card.Body>\n    //             <h2 className=\"text-center mb-4\">Sign Up</h2>\n    //             {error && <Alert variant=\"warning\">{error}</Alert>}\n    //             <Form onSubmit={handleSubmit}>\n    //                 <Form.Group id=\"email\">\n    //                     <Form.Label>Email</Form.Label>\n    //                     <Form.Control type=\"email\" ref={emailRef} required></Form.Control>\n    //                 </Form.Group>\n    //                 <Form.Group id=\"password\">\n    //                     <Form.Label>Password</Form.Label>\n    //                     <Form.Control type=\"password\" ref={passwordRef} required></Form.Control>\n    //                 </Form.Group>\n    //                 <Form.Group id=\"password-confirm\">\n    //                     <Form.Label>Password Confirmation</Form.Label>\n    //                     <Form.Control type=\"password\" ref={passwordConfirmRef} required></Form.Control>\n    //                 </Form.Group>\n    //                 <Button disabled={loading} className=\"w-100 mt-4\" type=\"submit\">Sign Up</Button>\n    //             </Form>\n    //         </Card.Body>\n    //     </Card>\n    //     <div className=\"w-100 text-center mt-2\">\n    //         Already have an account? <Link to=\"/login\">Login</Link>\n    //     </div>\n    // </>\n    _jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: logo,\n              id: \"logo\",\n              alt: \"Logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"warning\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              id: \"nome\",\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"nome\",\n                placeholder: \"Nome\",\n                ref: nomeRef,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              id: \"email\",\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"email\",\n                placeholder: \"E-mail\",\n                ref: emailRef,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              id: \"password\",\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                id: \"margin\",\n                type: \"password\",\n                placeholder: \"Senha\",\n                ref: passwordRef,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              id: \"passwordConfirm\",\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                id: \"margin\",\n                type: \"passwordConfirm\",\n                placeholder: \"Confi\",\n                ref: passwordRef,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              disabled: loading,\n              id: \"button-orange\",\n              className: \"w-100 mt-4\",\n              type: \"submit\",\n              children: \"Cadastrar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false)\n  );\n}\n\n_s(SignUp, \"9MwIKo81+breic7i1iiAB8jf1Vg=\", false, function () {\n  return [useAuth, useHistory];\n});\n\n_c = SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["C:/dev/infnet/Front-end/projeto-de-bloco/miaut/pet-friendly/src/components/SignUp.js"],"names":["React","useRef","useState","Card","Form","Button","Alert","useAuth","Link","useHistory","logo","SignUp","emailRef","passwordRef","passwordConfirmRef","signUp","error","setError","loading","setLoading","history","handleSubmit","e","preventDefault","current","value","push","nomeRef"],"mappings":"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","sourcesContent":["import React, {useRef, useState} from \"react\"\r\nimport {Card, Form, Button, Alert} from \"react-bootstrap\"\r\nimport {useAuth} from \"../contexts/AuthContext\"\r\nimport {Link, useHistory} from \"react-router-dom\"\r\nimport logo from \"../img/logoMiaut.png\";\r\n\r\nexport default function SignUp() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const {signUp} = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        if(passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('Passwords do not match')\r\n        }\r\n\r\n        try {\r\n            setError('')\r\n            setLoading(true)\r\n            await signUp(emailRef.current.value, passwordRef.current.value)\r\n            history.push(\"/login\")\r\n        } catch {\r\n            setError('Failed to create an account')\r\n        }\r\n\r\n        setLoading(false)\r\n    }\r\n    \r\n    return (\r\n        // <>\r\n        //     <Card>\r\n        //         <Card.Body>\r\n        //             <h2 className=\"text-center mb-4\">Sign Up</h2>\r\n        //             {error && <Alert variant=\"warning\">{error}</Alert>}\r\n        //             <Form onSubmit={handleSubmit}>\r\n        //                 <Form.Group id=\"email\">\r\n        //                     <Form.Label>Email</Form.Label>\r\n        //                     <Form.Control type=\"email\" ref={emailRef} required></Form.Control>\r\n        //                 </Form.Group>\r\n        //                 <Form.Group id=\"password\">\r\n        //                     <Form.Label>Password</Form.Label>\r\n        //                     <Form.Control type=\"password\" ref={passwordRef} required></Form.Control>\r\n        //                 </Form.Group>\r\n        //                 <Form.Group id=\"password-confirm\">\r\n        //                     <Form.Label>Password Confirmation</Form.Label>\r\n        //                     <Form.Control type=\"password\" ref={passwordConfirmRef} required></Form.Control>\r\n        //                 </Form.Group>\r\n        //                 <Button disabled={loading} className=\"w-100 mt-4\" type=\"submit\">Sign Up</Button>\r\n        //             </Form>\r\n        //         </Card.Body>\r\n        //     </Card>\r\n        //     <div className=\"w-100 text-center mt-2\">\r\n        //         Already have an account? <Link to=\"/login\">Login</Link>\r\n        //     </div>\r\n        // </>\r\n\r\n        <>\r\n        <div>\r\n          <div>\r\n            <div>\r\n              <img src={logo} id=\"logo\" alt=\"Logo\" />\r\n            </div>\r\n            {error && <Alert variant=\"warning\">{error}</Alert>}\r\n            <Form onSubmit={handleSubmit}>\r\n              <Form.Group id=\"nome\">\r\n                {/* <Form.Label>Email</Form.Label> */}\r\n                <Form.Control\r\n                  type=\"nome\"\r\n                  placeholder=\"Nome\"\r\n                  ref={nomeRef}\r\n                  required\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group id=\"email\">\r\n                {/* <Form.Label>Email</Form.Label> */}\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  placeholder=\"E-mail\"\r\n                  ref={emailRef}\r\n                  required\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group id=\"password\">\r\n                {/* <Form.Label>Password</Form.Label> */}\r\n                <Form.Control\r\n                  id=\"margin\"\r\n                  type=\"password\"\r\n                  placeholder=\"Senha\"\r\n                  ref={passwordRef}\r\n                  required\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group id=\"passwordConfirm\">\r\n                {/* <Form.Label>Password</Form.Label> */}\r\n                <Form.Control\r\n                  id=\"margin\"\r\n                  type=\"passwordConfirm\"\r\n                  placeholder=\"Confi\"\r\n                  ref={passwordRef}\r\n                  required\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Button\r\n                disabled={loading}\r\n                id=\"button-orange\"\r\n                className=\"w-100 mt-4\"\r\n                type=\"submit\"\r\n              >\r\n                Cadastrar\r\n              </Button>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}